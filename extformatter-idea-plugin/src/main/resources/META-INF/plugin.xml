<!DOCTYPE idea-plugin PUBLIC "Plugin/DTD" "http://plugins.intellij.net/plugin.dtd">
<idea-plugin url="http://github.com/orfjackal/extformatter">

    <name>${plugin.name}</name>
    <id>${plugin.id}</id>
    <version>${project.version}</version>

    <description>
        Allows using external code formatters, especially Eclipse's code formatter, as well as any command line code
        formatting tools, from within IntelliJ IDEA. Solves the problem of maintaining a common code style in team
        environments where both IDEA and Eclipse are used.
    </description>
    <category>Formatting</category>

    <vendor url="http://www.orfjackal.net" logo="/net/orfjackal/extformatter/icons/logo-16.png">Esko Luontola</vendor>

    <idea-version since-build="9000"/>

    <change-notes><![CDATA[
        <p>1.0.3 (2009-06-23)
        <br>- Fixed Eclipse code formatter on non-Windows platforms</p>

        <p>1.0.2 (2009-02-14)
        <br>- Compatible with IDEA 8</p>

        <p>1.0.1 (2008-01-22)
        <br>- Fixed a file cache issue: When a file was reformatted more than once, the changes between the reformats
              were lost.</p>

        <p>1.0.0 (2007-12-21)
        <br>- Minor refactorings</p>

        <p>0.5.0 (2007-12-19)
        <br>- Support for Undo (Ctrl+Z)
        <br>- Help documentation for using a custom code formatter</p>

        <p>0.4.0 (2007-12-14)
        <br>- Support for any code formatter which has a command line interface</p>

        <p>0.3.0 (2007-12-12)
        <br>- Improved performance: Reformats all selected files by starting Eclipse only once</p>

        <p>0.2.0 (2007-12-11)
        <br>- Added help documentation
        <br>- Added program icons
        <br>- Switched development platform to IDEA 7.0 and JDK 1.5 for maximum compatibility</p>
        
        <p>0.1.0 (2007-12-05)
        <br>- Initial release</p>

        <p>Known issues
        <br>- Does not support reformatting a selection within a file. Implementation of this feature
              is not planned, until there is a code formatting tool (executable on the command line)
              which supports reformatting a text range.
        </p>
    ]]></change-notes>

    <helpset file="extformatter-help.jar" path="/Help.hs"/>

    <project-components>
        <component>
            <implementation-class>net.orfjackal.extformatter.plugin.ProjectSettingsComponent</implementation-class>
        </component>
    </project-components>

</idea-plugin>
